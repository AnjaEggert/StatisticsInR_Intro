f_distr_poster.ggplot
f_distr_poster.ggplot <- ggplot()+
geom_histogram(data=sim.ncf,aes(x=f_value,y=..density..),position='identity',binwidth=.5,fill="firebrick",col="firebrick",alpha=0.3)+
geom_histogram(data=sim.cf,aes(x=f_value,y=..density..),position='identity',binwidth=.5,fill="cornflowerblue",col="cornflowerblue",alpha=0.3)+
geom_line(data=f.df, aes(x=x,y=y2),size = 1,col="cornflowerblue")+
geom_line(data=f.df, aes(x=x,y=f.noncentral),size = 1,col="firebrick")+
geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2), data = seg, linetype="solid",size=1, colour="darkgreen")+
scale_x_continuous(limits=c(-.5,50), breaks=seq(0,50,by=5))+
ggtitle("Power analysis for one-way ANOVA, with k = 3 groups and sample size n = 6")+
xlab(label= c(expression(paste("Distribution of central and noncentral F statistics"))))+
ylab(label= c(expression(paste(""))))+
annotate("text", x = 2.2, y = 0.5, label = as.character(c(expression(paste("central ", F_[(2,15)], " distribution, ",delta^2," = 0")))), parse=TRUE, size = 4, hjust=0, fontface = "plain", colour="cornflowerblue")+
annotate("text", x = 10, y = 0.2, label = as.character(c(expression(paste("non-central ", F_[(2,15)] ," distribution, ",delta^2," = 25")))), parse=TRUE, size = 4, hjust=0, fontface = "plain", colour="firebrick")+
annotate("text", x = 3.68, y = 0.1, label = as.character(c(expression(paste(F[critical])))), parse=TRUE, size = 5, hjust=0, fontface = "plain", colour="darkgreen",angle=90)+
# Mathematical Text
annotate("text", x = 50, y = 0.7, label = TeX("If $H_A$ is true, F statistics follows non-central F distribution and"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.65, label = TeX("power can be computed as its cumulative density function:"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.55, label = TeX("power = 1 - $(\\int_{0}^{x} P(x | df1, df2, \\delta^2) dx)|_F_{critical}$"), parse=TRUE, size = 4, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.45, label = TeX("with non-centrality parameter $\\delta^2$"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.35, label = TeX("$\\delta^2 = n \\sum_{i=1}^{k} \\frac{(\\mu_i-\\mu)^2}{\\sigma^2}$"), parse=TRUE, size = 4, hjust=1, fontface = "plain", colour="black")+
theme_bw() %+replace% theme(panel.grid = element_blank())+
theme(legend.position="none")+
theme(axis.title.x = element_text(face="bold", size=14), axis.text.x  = element_text(size=12,angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_blank(), axis.text.y=element_blank(),axis.ticks = element_blank())+
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.key = element_rect(fill = "transparent", colour = NA), # get rid of key legend fill, and of the surrounding
axis.line = element_line(colour = "black") # adding a black line for x and y axis
)
f_distr_poster.ggplot
f_distr_poster.ggplot <- ggplot()+
geom_histogram(data=sim.ncf,aes(x=f_value,y=..density..),position='identity',binwidth=.5,fill="firebrick",col="firebrick",alpha=0.3)+
geom_histogram(data=sim.cf,aes(x=f_value,y=..density..),position='identity',binwidth=.5,fill="cornflowerblue",col="cornflowerblue",alpha=0.3)+
geom_line(data=f.df, aes(x=x,y=y2),size = 1,col="cornflowerblue")+
geom_line(data=f.df, aes(x=x,y=f.noncentral),size = 1,col="firebrick")+
geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2), data = seg, linetype="solid",size=1, colour="darkgreen")+
scale_x_continuous(limits=c(-.5,50), breaks=seq(0,50,by=5))+
ggtitle("Power analysis for one-way ANOVA, with k = 3 groups and sample size n = 6")+
xlab(label= c(expression(paste("Distribution of central and noncentral F statistics"))))+
ylab(label= c(expression(paste(""))))+
annotate("text", x = 2.2, y = 0.5, label = as.character(c(expression(paste("central ", F_[2], " distribution, ",delta^2," = 0")))), parse=TRUE, size = 4, hjust=0, fontface = "plain", colour="cornflowerblue")+
annotate("text", x = 10, y = 0.2, label = as.character(c(expression(paste("non-central ", F_[2] ," distribution, ",delta^2," = 25")))), parse=TRUE, size = 4, hjust=0, fontface = "plain", colour="firebrick")+
annotate("text", x = 3.68, y = 0.1, label = as.character(c(expression(paste(F[critical])))), parse=TRUE, size = 5, hjust=0, fontface = "plain", colour="darkgreen",angle=90)+
# Mathematical Text
annotate("text", x = 50, y = 0.7, label = TeX("If $H_A$ is true, F statistics follows non-central F distribution and"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.65, label = TeX("power can be computed as its cumulative density function:"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.55, label = TeX("power = 1 - $(\\int_{0}^{x} P(x | df1, df2, \\delta^2) dx)|_F_{critical}$"), parse=TRUE, size = 4, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.45, label = TeX("with non-centrality parameter $\\delta^2$"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.35, label = TeX("$\\delta^2 = n \\sum_{i=1}^{k} \\frac{(\\mu_i-\\mu)^2}{\\sigma^2}$"), parse=TRUE, size = 4, hjust=1, fontface = "plain", colour="black")+
theme_bw() %+replace% theme(panel.grid = element_blank())+
theme(legend.position="none")+
theme(axis.title.x = element_text(face="bold", size=14), axis.text.x  = element_text(size=12,angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_blank(), axis.text.y=element_blank(),axis.ticks = element_blank())+
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.key = element_rect(fill = "transparent", colour = NA), # get rid of key legend fill, and of the surrounding
axis.line = element_line(colour = "black") # adding a black line for x and y axis
)
f_distr_poster.ggplot
f_distr_poster.ggplot <- ggplot()+
geom_histogram(data=sim.ncf,aes(x=f_value,y=..density..),position='identity',binwidth=.5,fill="firebrick",col="firebrick",alpha=0.3)+
geom_histogram(data=sim.cf,aes(x=f_value,y=..density..),position='identity',binwidth=.5,fill="cornflowerblue",col="cornflowerblue",alpha=0.3)+
geom_line(data=f.df, aes(x=x,y=y2),size = 1,col="cornflowerblue")+
geom_line(data=f.df, aes(x=x,y=f.noncentral),size = 1,col="firebrick")+
geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2), data = seg, linetype="solid",size=1, colour="darkgreen")+
scale_x_continuous(limits=c(-.5,50), breaks=seq(0,50,by=5))+
ggtitle("Power analysis for one-way ANOVA, with k = 3 groups and sample size n = 6")+
xlab(label= c(expression(paste("Distribution of central and noncentral F statistics"))))+
ylab(label= c(expression(paste(""))))+
annotate("text", x = 2.2, y = 0.5, label = as.character(c(expression(paste("central ", F[(2,15)], " distribution, ",delta^2," = 0")))), parse=TRUE, size = 4, hjust=0, fontface = "plain", colour="cornflowerblue")+
annotate("text", x = 10, y = 0.2, label = as.character(c(expression(paste("non-central ", F[(2,15)] ," distribution, ",delta^2," = 25")))), parse=TRUE, size = 4, hjust=0, fontface = "plain", colour="firebrick")+
annotate("text", x = 3.68, y = 0.1, label = as.character(c(expression(paste(F[critical])))), parse=TRUE, size = 5, hjust=0, fontface = "plain", colour="darkgreen",angle=90)+
# Mathematical Text
annotate("text", x = 50, y = 0.7, label = TeX("If $H_A$ is true, F statistics follows non-central F distribution and"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.65, label = TeX("power can be computed as its cumulative density function:"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.55, label = TeX("power = 1 - $(\\int_{0}^{x} P(x | df1, df2, \\delta^2) dx)|_F_{critical}$"), parse=TRUE, size = 4, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.45, label = TeX("with non-centrality parameter $\\delta^2$"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.35, label = TeX("$\\delta^2 = n \\sum_{i=1}^{k} \\frac{(\\mu_i-\\mu)^2}{\\sigma^2}$"), parse=TRUE, size = 4, hjust=1, fontface = "plain", colour="black")+
theme_bw() %+replace% theme(panel.grid = element_blank())+
theme(legend.position="none")+
theme(axis.title.x = element_text(face="bold", size=14), axis.text.x  = element_text(size=12,angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_blank(), axis.text.y=element_blank(),axis.ticks = element_blank())+
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.key = element_rect(fill = "transparent", colour = NA), # get rid of key legend fill, and of the surrounding
axis.line = element_line(colour = "black") # adding a black line for x and y axis
)
f_distr_poster.ggplot
f_distr_poster.ggplot <- ggplot()+
geom_histogram(data=sim.ncf,aes(x=f_value,y=..density..),position='identity',binwidth=.5,fill="firebrick",col="firebrick",alpha=0.3)+
geom_histogram(data=sim.cf,aes(x=f_value,y=..density..),position='identity',binwidth=.5,fill="cornflowerblue",col="cornflowerblue",alpha=0.3)+
geom_line(data=f.df, aes(x=x,y=y2),size = 1,col="cornflowerblue")+
geom_line(data=f.df, aes(x=x,y=f.noncentral),size = 1,col="firebrick")+
geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2), data = seg, linetype="solid",size=1, colour="darkgreen")+
scale_x_continuous(limits=c(-.5,50), breaks=seq(0,50,by=5))+
ggtitle("Power analysis for one-way ANOVA, with k = 3 groups and sample size n = 6")+
xlab(label= c(expression(paste("Distribution of central and noncentral F statistics"))))+
ylab(label= c(expression(paste(""))))+
annotate("text", x = 2.2, y = 0.5, label = as.character(c(expression(paste("central ", F[2], " distribution, ",delta^2," = 0")))), parse=TRUE, size = 4, hjust=0, fontface = "plain", colour="cornflowerblue")+
annotate("text", x = 10, y = 0.2, label = as.character(c(expression(paste("non-central ", F[(2,15)] ," distribution, ",delta^2," = 25")))), parse=TRUE, size = 4, hjust=0, fontface = "plain", colour="firebrick")+
annotate("text", x = 3.68, y = 0.1, label = as.character(c(expression(paste(F[critical])))), parse=TRUE, size = 5, hjust=0, fontface = "plain", colour="darkgreen",angle=90)+
# Mathematical Text
annotate("text", x = 50, y = 0.7, label = TeX("If $H_A$ is true, F statistics follows non-central F distribution and"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.65, label = TeX("power can be computed as its cumulative density function:"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.55, label = TeX("power = 1 - $(\\int_{0}^{x} P(x | df1, df2, \\delta^2) dx)|_F_{critical}$"), parse=TRUE, size = 4, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.45, label = TeX("with non-centrality parameter $\\delta^2$"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.35, label = TeX("$\\delta^2 = n \\sum_{i=1}^{k} \\frac{(\\mu_i-\\mu)^2}{\\sigma^2}$"), parse=TRUE, size = 4, hjust=1, fontface = "plain", colour="black")+
theme_bw() %+replace% theme(panel.grid = element_blank())+
theme(legend.position="none")+
theme(axis.title.x = element_text(face="bold", size=14), axis.text.x  = element_text(size=12,angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_blank(), axis.text.y=element_blank(),axis.ticks = element_blank())+
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.key = element_rect(fill = "transparent", colour = NA), # get rid of key legend fill, and of the surrounding
axis.line = element_line(colour = "black") # adding a black line for x and y axis
)
f_distr_poster.ggplot
f_distr_poster.ggplot <- ggplot()+
geom_histogram(data=sim.ncf,aes(x=f_value,y=..density..),position='identity',binwidth=.5,fill="firebrick",col="firebrick",alpha=0.3)+
geom_histogram(data=sim.cf,aes(x=f_value,y=..density..),position='identity',binwidth=.5,fill="cornflowerblue",col="cornflowerblue",alpha=0.3)+
geom_line(data=f.df, aes(x=x,y=y2),size = 1,col="cornflowerblue")+
geom_line(data=f.df, aes(x=x,y=f.noncentral),size = 1,col="firebrick")+
geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2), data = seg, linetype="solid",size=1, colour="darkgreen")+
scale_x_continuous(limits=c(-.5,50), breaks=seq(0,50,by=5))+
ggtitle("Power analysis for one-way ANOVA, with k = 3 groups and sample size n = 6")+
xlab(label= c(expression(paste("Distribution of central and noncentral F statistics"))))+
ylab(label= c(expression(paste(""))))+
annotate("text", x = 2.2, y = 0.5, label = as.character(c(expression(paste("central ", F[2], " distribution, ",delta^2," = 0")))), parse=TRUE, size = 4, hjust=0, fontface = "plain", colour="cornflowerblue")+
annotate("text", x = 10, y = 0.2, label = as.character(c(expression(paste("non-central ", F[2] ," distribution, ",delta^2," = 25")))), parse=TRUE, size = 4, hjust=0, fontface = "plain", colour="firebrick")+
annotate("text", x = 3.68, y = 0.1, label = as.character(c(expression(paste(F[critical])))), parse=TRUE, size = 5, hjust=0, fontface = "plain", colour="darkgreen",angle=90)+
# Mathematical Text
annotate("text", x = 50, y = 0.7, label = TeX("If $H_A$ is true, F statistics follows non-central F distribution and"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.65, label = TeX("power can be computed as its cumulative density function:"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.55, label = TeX("power = 1 - $(\\int_{0}^{x} P(x | df1, df2, \\delta^2) dx)|_F_{critical}$"), parse=TRUE, size = 4, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.45, label = TeX("with non-centrality parameter $\\delta^2$"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.35, label = TeX("$\\delta^2 = n \\sum_{i=1}^{k} \\frac{(\\mu_i-\\mu)^2}{\\sigma^2}$"), parse=TRUE, size = 4, hjust=1, fontface = "plain", colour="black")+
theme_bw() %+replace% theme(panel.grid = element_blank())+
theme(legend.position="none")+
theme(axis.title.x = element_text(face="bold", size=14), axis.text.x  = element_text(size=12,angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_blank(), axis.text.y=element_blank(),axis.ticks = element_blank())+
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.key = element_rect(fill = "transparent", colour = NA), # get rid of key legend fill, and of the surrounding
axis.line = element_line(colour = "black") # adding a black line for x and y axis
)
f_distr_poster.ggplot
f_distr_poster.ggplot <- ggplot()+
geom_histogram(data=sim.ncf,aes(x=f_value,y=..density..),position='identity',binwidth=.5,fill="firebrick",col="firebrick",alpha=0.3)+
geom_histogram(data=sim.cf,aes(x=f_value,y=..density..),position='identity',binwidth=.5,fill="cornflowerblue",col="cornflowerblue",alpha=0.3)+
geom_line(data=f.df, aes(x=x,y=y2),size = 1,col="cornflowerblue")+
geom_line(data=f.df, aes(x=x,y=f.noncentral),size = 1,col="firebrick")+
geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2), data = seg, linetype="solid",size=1, colour="darkgreen")+
scale_x_continuous(limits=c(-.5,50), breaks=seq(0,50,by=5))+
ggtitle("Power analysis for one-way ANOVA, with k = 3 groups and sample size n = 6")+
xlab(label= c(expression(paste("Distribution of central and noncentral F statistics"))))+
ylab(label= c(expression(paste(""))))+
annotate("text", x = 2.2, y = 0.5, label = as.character(c(expression(paste("central ", F[2,15], " distribution, ",delta^2," = 0")))), parse=TRUE, size = 4, hjust=0, fontface = "plain", colour="cornflowerblue")+
annotate("text", x = 10, y = 0.2, label = as.character(c(expression(paste("non-central ", F[2] ," distribution, ",delta^2," = 25")))), parse=TRUE, size = 4, hjust=0, fontface = "plain", colour="firebrick")+
annotate("text", x = 3.68, y = 0.1, label = as.character(c(expression(paste(F[critical])))), parse=TRUE, size = 5, hjust=0, fontface = "plain", colour="darkgreen",angle=90)+
# Mathematical Text
annotate("text", x = 50, y = 0.7, label = TeX("If $H_A$ is true, F statistics follows non-central F distribution and"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.65, label = TeX("power can be computed as its cumulative density function:"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.55, label = TeX("power = 1 - $(\\int_{0}^{x} P(x | df1, df2, \\delta^2) dx)|_F_{critical}$"), parse=TRUE, size = 4, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.45, label = TeX("with non-centrality parameter $\\delta^2$"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.35, label = TeX("$\\delta^2 = n \\sum_{i=1}^{k} \\frac{(\\mu_i-\\mu)^2}{\\sigma^2}$"), parse=TRUE, size = 4, hjust=1, fontface = "plain", colour="black")+
theme_bw() %+replace% theme(panel.grid = element_blank())+
theme(legend.position="none")+
theme(axis.title.x = element_text(face="bold", size=14), axis.text.x  = element_text(size=12,angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_blank(), axis.text.y=element_blank(),axis.ticks = element_blank())+
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.key = element_rect(fill = "transparent", colour = NA), # get rid of key legend fill, and of the surrounding
axis.line = element_line(colour = "black") # adding a black line for x and y axis
)
f_distr_poster.ggplot
f_distr_poster.ggplot <- ggplot()+
geom_histogram(data=sim.ncf,aes(x=f_value,y=..density..),position='identity',binwidth=.5,fill="firebrick",col="firebrick",alpha=0.3)+
geom_histogram(data=sim.cf,aes(x=f_value,y=..density..),position='identity',binwidth=.5,fill="cornflowerblue",col="cornflowerblue",alpha=0.3)+
geom_line(data=f.df, aes(x=x,y=y2),size = 1,col="cornflowerblue")+
geom_line(data=f.df, aes(x=x,y=f.noncentral),size = 1,col="firebrick")+
geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2), data = seg, linetype="solid",size=1, colour="darkgreen")+
scale_x_continuous(limits=c(-.5,50), breaks=seq(0,50,by=5))+
ggtitle("Power analysis for one-way ANOVA, with k = 3 groups and sample size n = 6")+
xlab(label= c(expression(paste("Distribution of central and noncentral F statistics"))))+
ylab(label= c(expression(paste(""))))+
annotate("text", x = 2.2, y = 0.5, label = as.character(c(expression(paste("central ", F[{2,15}], " distribution, ",delta^2," = 0")))), parse=TRUE, size = 4, hjust=0, fontface = "plain", colour="cornflowerblue")+
annotate("text", x = 10, y = 0.2, label = as.character(c(expression(paste("non-central ", F[2] ," distribution, ",delta^2," = 25")))), parse=TRUE, size = 4, hjust=0, fontface = "plain", colour="firebrick")+
annotate("text", x = 3.68, y = 0.1, label = as.character(c(expression(paste(F[critical])))), parse=TRUE, size = 5, hjust=0, fontface = "plain", colour="darkgreen",angle=90)+
# Mathematical Text
annotate("text", x = 50, y = 0.7, label = TeX("If $H_A$ is true, F statistics follows non-central F distribution and"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.65, label = TeX("power can be computed as its cumulative density function:"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.55, label = TeX("power = 1 - $(\\int_{0}^{x} P(x | df1, df2, \\delta^2) dx)|_F_{critical}$"), parse=TRUE, size = 4, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.45, label = TeX("with non-centrality parameter $\\delta^2$"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.35, label = TeX("$\\delta^2 = n \\sum_{i=1}^{k} \\frac{(\\mu_i-\\mu)^2}{\\sigma^2}$"), parse=TRUE, size = 4, hjust=1, fontface = "plain", colour="black")+
theme_bw() %+replace% theme(panel.grid = element_blank())+
theme(legend.position="none")+
theme(axis.title.x = element_text(face="bold", size=14), axis.text.x  = element_text(size=12,angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_blank(), axis.text.y=element_blank(),axis.ticks = element_blank())+
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.key = element_rect(fill = "transparent", colour = NA), # get rid of key legend fill, and of the surrounding
axis.line = element_line(colour = "black") # adding a black line for x and y axis
)
f_distr_poster.ggplot
f_distr_poster.ggplot <- ggplot()+
geom_histogram(data=sim.ncf,aes(x=f_value,y=..density..),position='identity',binwidth=.5,fill="firebrick",col="firebrick",alpha=0.3)+
geom_histogram(data=sim.cf,aes(x=f_value,y=..density..),position='identity',binwidth=.5,fill="cornflowerblue",col="cornflowerblue",alpha=0.3)+
geom_line(data=f.df, aes(x=x,y=y2),size = 1,col="cornflowerblue")+
geom_line(data=f.df, aes(x=x,y=f.noncentral),size = 1,col="firebrick")+
geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2), data = seg, linetype="solid",size=1, colour="darkgreen")+
scale_x_continuous(limits=c(-.5,50), breaks=seq(0,50,by=5))+
ggtitle("Power analysis for one-way ANOVA, with k = 3 groups and sample size n = 6")+
xlab(label= c(expression(paste("Distribution of central and noncentral F statistics"))))+
ylab(label= c(expression(paste(""))))+
annotate("text", x = 2.2, y = 0.5, label = as.character(c(expression(paste("central ", F[paste(2, ",", 15)], " distribution, ",delta^2," = 0")))), parse=TRUE, size = 4, hjust=0, fontface = "plain", colour="cornflowerblue")+
annotate("text", x = 10, y = 0.2, label = as.character(c(expression(paste("non-central ", F[2] ," distribution, ",delta^2," = 25")))), parse=TRUE, size = 4, hjust=0, fontface = "plain", colour="firebrick")+
annotate("text", x = 3.68, y = 0.1, label = as.character(c(expression(paste(F[critical])))), parse=TRUE, size = 5, hjust=0, fontface = "plain", colour="darkgreen",angle=90)+
# Mathematical Text
annotate("text", x = 50, y = 0.7, label = TeX("If $H_A$ is true, F statistics follows non-central F distribution and"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.65, label = TeX("power can be computed as its cumulative density function:"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.55, label = TeX("power = 1 - $(\\int_{0}^{x} P(x | df1, df2, \\delta^2) dx)|_F_{critical}$"), parse=TRUE, size = 4, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.45, label = TeX("with non-centrality parameter $\\delta^2$"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.35, label = TeX("$\\delta^2 = n \\sum_{i=1}^{k} \\frac{(\\mu_i-\\mu)^2}{\\sigma^2}$"), parse=TRUE, size = 4, hjust=1, fontface = "plain", colour="black")+
theme_bw() %+replace% theme(panel.grid = element_blank())+
theme(legend.position="none")+
theme(axis.title.x = element_text(face="bold", size=14), axis.text.x  = element_text(size=12,angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_blank(), axis.text.y=element_blank(),axis.ticks = element_blank())+
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.key = element_rect(fill = "transparent", colour = NA), # get rid of key legend fill, and of the surrounding
axis.line = element_line(colour = "black") # adding a black line for x and y axis
)
f_distr_poster.ggplot
f_distr_poster.ggplot <- ggplot()+
geom_histogram(data=sim.ncf,aes(x=f_value,y=..density..),position='identity',binwidth=.5,fill="firebrick",col="firebrick",alpha=0.3)+
geom_histogram(data=sim.cf,aes(x=f_value,y=..density..),position='identity',binwidth=.5,fill="cornflowerblue",col="cornflowerblue",alpha=0.3)+
geom_line(data=f.df, aes(x=x,y=y2),size = 1,col="cornflowerblue")+
geom_line(data=f.df, aes(x=x,y=f.noncentral),size = 1,col="firebrick")+
geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2), data = seg, linetype="solid",size=1, colour="darkgreen")+
scale_x_continuous(limits=c(-.5,50), breaks=seq(0,50,by=5))+
ggtitle("Power analysis for one-way ANOVA, with k = 3 groups and sample size n = 6")+
xlab(label= c(expression(paste("Distribution of central and noncentral F statistics"))))+
ylab(label= c(expression(paste(""))))+
annotate("text", x = 2.2, y = 0.5, label = as.character(c(expression(paste("central ", F[paste(2, ",", 15)], " distribution, ",delta^2," = 0")))), parse=TRUE, size = 4, hjust=0, fontface = "plain", colour="cornflowerblue")+
annotate("text", x = 10, y = 0.2, label = as.character(c(expression(paste("non-central ", F[paste(2, ",", 15)] ," distribution, ",delta^2," = 25")))), parse=TRUE, size = 4, hjust=0, fontface = "plain", colour="firebrick")+
annotate("text", x = 3.68, y = 0.1, label = as.character(c(expression(paste(F[critical])))), parse=TRUE, size = 5, hjust=0, fontface = "plain", colour="darkgreen",angle=90)+
# Mathematical Text
annotate("text", x = 50, y = 0.7, label = TeX("If $H_A$ is true, F statistics follows non-central F distribution and"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.65, label = TeX("power can be computed as its cumulative density function:"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.55, label = TeX("power = 1 - $(\\int_{0}^{x} P(x | df1, df2, \\delta^2) dx)|_F_{critical}$"), parse=TRUE, size = 4, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.45, label = TeX("with non-centrality parameter $\\delta^2$"), parse=TRUE, size = 3.5, hjust=1, fontface = "plain", colour="black")+
annotate("text", x = 50, y = 0.35, label = TeX("$\\delta^2 = n \\sum_{i=1}^{k} \\frac{(\\mu_i-\\mu)^2}{\\sigma^2}$"), parse=TRUE, size = 4, hjust=1, fontface = "plain", colour="black")+
theme_bw() %+replace% theme(panel.grid = element_blank())+
theme(legend.position="none")+
theme(axis.title.x = element_text(face="bold", size=14), axis.text.x  = element_text(size=12,angle = 0, vjust = 0.5)) +
theme(axis.title.y = element_blank(), axis.text.y=element_blank(),axis.ticks = element_blank())+
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.key = element_rect(fill = "transparent", colour = NA), # get rid of key legend fill, and of the surrounding
axis.line = element_line(colour = "black") # adding a black line for x and y axis
)
f_distr_poster.ggplot
png("./FIG/f-distr_poster.png", width = 16.6, height = 10.8, units = 'cm', res = 300, type='cairo',bg = 'transparent')
f_distr_poster.ggplot
dev.off()
save.image("noncentral_f-dist_poster.RData")
rm(list=ls())
setwd("D:/Eggert/Documents/GitHub/StatisticsInR_Intro/ExampleRCode")
load("../ExampleData/data_wide.RData")
##----Convert data frame to long format----
library("tidyverse")
data_wide <- as_tibble(data_wide)
# convert to long format
data_wide %>%
select(var0,var1) %>%
gather(key = Variable, value = Yield)
head(data_wide,3)
head(data_long,3)
data_wide %>%
select(var0,var1) %>%
gather(key = Variable, value = Yield)
##----Convert data frame to long format----
library("reshape")
data_wide <- as_tibble(data_wide)
data_wide %>%
select(var0,var1) %>%
gather(key = Variable, value = Yield) %>%
data_long
data_long <-data_wide %>%
select(var0,var1) %>%
gather(key = Variable, value = Yield)
View(data_long)
##----Convert data frame to long format----
library("tidyverse")
library("tidyverse", lib.loc="~/R/win-library/3.5")
rm(list=ls())
rm(list=ls())
setwd("D:/Eggert/Documents/GitHub/StatisticsInR_Intro/ExampleRCode")
load("../ExampleData/data_wide.RData")
##----Convert data frame to long format----
library("tidyverse")
data_wide <- as_tibble(data_wide)
data_long <-data_wide %>%
select(var0,var1) %>%
gather(key = Variable, value = Yield)
head(data_wide,3)
head(data_long,3)
# convert to long format
data_long <-data_wide %>%
gather(key = Variable, value = Yield)
data_long <-data_wide %>%
gather(key = Variable, value = Yield)
View(data_long)
# convert to long format
data_long <-data_wide %>%
gather()
data_wide <- as_tibble(data_wide)
rm(list=ls())
load("../ExampleData/data_wide.RData")
data_wide <- as_tibble(data_wide)
head(data_wide,3)
# convert to long format
data_long <-data_wide %>%
gather(data_wide, date, variable, var0:var1, factor_key=TRUE)
data_long <-data_wide %>%
gather(data_wide, date, var0:var1, factor_key=TRUE)
View(data_long)
data_long <-data_wide %>%
gather(variable, date, var0:var1, factor_key=TRUE)
View(data_long)
head(data_long,3)
library("ggplot2")
ggplot(data=data_long,aes(x=date, y=variable)) +
geom_line()
View(data_long)
View(data_wide)
View(data_wide)
# convert to long format
data_long <-data_wide %>%
gather(variable, value,factor_key=TRUE)
rm(list=ls())
load("../ExampleData/data_wide.RData")
data_wide <- as_tibble(data_wide)
?gather
data_long <-data_wide %>%
gather("variable", "value")
View(data_long)
# convert to long format
data_long <- gather(data_wide, key="variable", value="value")
##----Convert data frame to long format----
library("tidyr")
# convert to long format
data_long <- gather(data_wide, key="variable", value="value")
rm(data_long)
# convert to long format
data_long <- gather(data_wide, variable, value,var0:var1)
View(data_long)
head(data_long,3)
##----Plotting----
library("ggplot2")
ggplot(data=data_long,aes(x=date, y=value, group=variable)) +
geom_line()
ggplot(data=data_long,aes(x=date, y=value, group=variable)) +
geom_line(aes(colour=variable))+
scale_color_manual(values=c('cornflowerblue','orange'))
ggplot(data=data_long,aes(x=date, y=value, group=variable)) +
geom_line(aes(colour=variable), size=2)+
scale_color_manual(values=c('cornflowerblue','orange'))+
theme(legend.position="top")
# Define colour palette outside ggplot
cbPalette <- c("#009E73", "#F0E442")
ggplot(data=data_long,aes(x=date, y=value, group=variable)) +
geom_line(aes(colour=variable, linetype=variable), size=1.5)+
scale_color_manual(values=cbPalette)+
# here the order of the lines is important!
# as them_bw() defines legend position at the right side, but if you want it on top, the poistion line must follow the theme line
theme_bw()+
theme(legend.position="top")
ggplot(data=data_long,aes(x=date, y=value, group=variable)) +
geom_line(aes(colour=variable, linetype=variable), size=1.5)+
scale_color_manual(values=cbPalette)+
theme_bw()+
theme(legend.position=c(0.1, 0.1))  # define specific position with relativ values for x and y, (0,0) is in the lower left corner
ggplot(data=data_long,aes(x=date, y=value, group=variable)) +
geom_line(aes(colour=variable,linetype=variable), size=1.5)+
scale_color_manual(values=cbPalette,labels=c("Variable 0", "Variable 1"))+
labs(x="Date", y="Growth", col="Variable \neffects")+
scale_linetype(guide = FALSE)+   # you need to exclude the legend for line type, otherwise you would get 2 legends
theme_bw()
data_long %>%
ggplot(aes(x=date, y=value, group=variable)) +
geom_line(aes(colour=variable,linetype=variable), size=1.5)+
scale_color_manual(values=cbPalette,labels=c("Variable 0", "Variable 1"))+
labs(x="Date", y="Growth", col="Variable \neffects")+
scale_linetype(guide = FALSE)+   # you need to exclude the legend for line type, otherwise you would get 2 legends
theme_bw()
rm(list=ls())
setwd("D:/Eggert/Documents/GitHub/StatisticsInR_Intro/ExampleRCode")
library(data.table)
dat <- fread("../ExampleData/2f_rcbd_cow.txt")
##----Conversion of data types etc.----
# use str() to look at the data format in the data table
str(dat)
dat$nut<-as.factor(dat$nut)
dat$fam<-as.factor(dat$fam)
dat$block<-as.factor(dat$block)
# combine the columns "fam" and "nut"
# useful to define the single combinations of the two factors in one column
dat$comb<-as.factor(paste0(dat$fam,"-",dat$nut))
# the columns "col" and "row" are the coordinates in the experimental design
# desplot() uses it to draw the design
dat$col<-as.factor(dat$col)
dat$row<-as.factor(dat$row)
##----Draw the experimental design----
library(desplot)
desplot(data=dat, form= block ~ col+row,
text=nut, cex=1, col=fam,
main="",
out1=row, out1.gpar=list(col="grey50", lwd=1, lty=1),
out2=col, out2.gpar=list(col="grey50", lwd=1, lty=1))
# plot for first impression
plot(y=dat$yield, x=dat$fam)
plot(y=dat$yield, x=dat$nut)
plot(y=dat$yield, x=dat$block)
boxplot(data=dat, yield ~ fam + nut, las=2)
mod <- lm(data    = dat,
formula = yield ~ nut + fam + nut:fam + block)
anova(mod) # Interaction is significant -> Final model
library(ggfortify)
autoplot(mod) # Residual plots
library(emmeans)
# get means and comparisons
means  <- emmeans(mod, pairwise ~ nut|fam, adjust = "tukey") # to get t-test: adjust="none"
means # look at means and comparisons
##----Simple plotting----
# add letters indicating significant differences
means  <- CLD(means$emmeans, details=T, Letters = letters)
plotit <- as.data.table(means$emmeans)
# plot adjusted means
library(ggplot2)
ggplot(data=plotit, aes(x=nut)) +
geom_bar(aes(y=emmean, fill=nut), stat="identity", width=0.8) +
geom_errorbar(aes(ymin=lower.CL, ymax=upper.CL), width=0.4) +
geom_text(aes(y=emmean+1500, label=.group)) +
facet_wrap(~fam) +
theme_bw()
plotit$.group <- gsub(" ", "", plotit$.group, fixed = TRUE)
ggplot() + theme_bw() +
# Rohdaten (crd)
geom_boxplot(data=dat,
aes(x=nut, y=yield),
outlier.shape=NA, width=0.6) +
geom_jitter(data=dat,
aes(x=nut, y=yield),
width=0.25, height=0, shape=1) +
# Ergebnisse (means)
geom_point(data=plotit,
aes(x=as.numeric(nut)+0.4, y=emmean),
col="red", shape=16, size=2) +
geom_errorbar(data=plotit,
aes(x=as.numeric(nut)+0.4, ymin=lower.CL, ymax=upper.CL),
col="red", width=0.1) +
geom_text(data=plotit,
aes(x=nut, y=9600, label=.group),
col="red") +
facet_wrap(~fam) +
ylim(0, 10000)
